{"version":3,"sources":["pages/chat/components/message.js","pages/chat/components/waitingmsg.js","pages/chat/components/chat.js","pages/chat/components/chat_list.js","App.js","reportWebVitals.js","index.js"],"names":["message","props","mymsg_class","info","msg_colr","msg_time","className","style","waitingmsg","id","Chat","ws","useRef","chats","Selected_chat","useEffect","console","log","useState","new_message","setnew_message","Messages","length","map","m","index","active","onSubmit","e","old_chat","curr_time","Date","toLocaleString","hour","minute","hour12","preventDefault","setchats","current","send","JSON","stringify","send_message","type","disabled","placeholder","value","onChange","target","Chatlist","sleep","ms","Promise","resolve","setTimeout","show","setShow","handleClose","Email_error","setEmail_error","email","setemail","order","setorder","open","setOpen","logging","a","is_valid","validator","isEmail","$","fadeOut","fadeIn","isAlphanumeric","data","axios","post","then","response","newchatlist","orderid","WebSocket","catch","onClick","c","setSelected_chat","new_list","slice","delete_chat","Modal","size","centered","onHide","Header","closeButton","Title","Body","App","MSGcount","setMSGcount","forEach","element","onopen","onmessage","new_chat","parse","onclose","exact","path","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ae953d3.chunk.js","sourcesContent":["import React from 'react'\n\nconst message = (props) => {\n    const mymsg_class = props.info['user'] ? ' flex-row-reverse': ' flex-row' ;\n    const msg_colr =  props.info['user']  ? ' my-message ': ' boot-message ' ;\n    const msg_time =  props.info['user']  ? ' d-flex flex-row-reverse text-start ': '  ' ;\n    return (\n        <>\n            <div  className=\"d-flex flex-column fading\">\n                <div className={\"d-flex \"+mymsg_class} >\n                  <div className={msg_colr +\" p-3 text-justify\"} style={{\"maxWidth\": \"40%\"}}>\n                    <span>\n                    {props.info['msg']}\n                    </span> \n                  </div> \n                </div>\n                <span className={msg_time}>\n                  <small>{props.info['time']}</small>\n                </span>\n              </div>\n            \n        </>\n    )\n}\n\nexport default message\n","import React from 'react'\n\nconst waitingmsg = () => {\n    return (\n        <>\n            <div className=\"d-flex flex-column\">\n                <div className=\" d-flex flex-row-reverse\">\n                  <div className=\"my-message p-3 text-justify\" style={{\"maxWidth\": \"40%\"}}>\n                    <h5 id=\"waiting_msg\">\n                    <span >.</span> <span>.</span> <span>.</span>\n                    </h5>        \n                  </div>\n                  </div>\n                  \n              </div>\n        </>\n    )\n}\n\nexport default waitingmsg\n","import React from 'react'\nimport { useState } from 'react';\nimport Message from './message';\nimport Waitingmsg from './waitingmsg';\nimport {useRef } from 'react';\nimport {useEffect } from 'react';\nconst Chat = (props) => {\n  const ws = useRef(props.chats[props.Selected_chat].ws);\n \n\n  \n    useEffect( () => {\n      console.log('im runing')\n      \n       \n    },[ props.chats]);  \n  \n  const send_message =  (e) => {\n    let old_chat = props.chats\n    let time = new Date();\n    let curr_time = time.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\n    e.preventDefault();\n    old_chat[props.Selected_chat].Messages = [...old_chat[props.Selected_chat].Messages, {\"msg\":new_message,\"time\":curr_time  ,\"user\":false}]\n    old_chat[props.Selected_chat].active = true;\n    props.setchats(old_chat);\n    setnew_message('')\n    ws.current.send( JSON.stringify(new_message));\n  }\n\n \n  const [new_message, setnew_message] = useState(\"\")\n  \n    return (\n      <div  className=\"col-9 fading\">\n      <div className=\"d-flex flex-column  align-items-center  \">\n        \n        <div id=\"chat_body\" className=\"mt-3 overflow-auto p-4\" >\n        { props.chats[props.Selected_chat].Messages.length !==0 ? props.chats[props.Selected_chat].Messages.map((m,index) => (\n         \n        <Message   key={index} info={m} />))\n          : \n          <div className=\" text-center fading\"> <h4>No Data Found</h4> </div>\n        }\n        {\n          props.chats[props.Selected_chat].active ? <Waitingmsg/> :<></>\n        }\n        </div>\n        <div id=\"chat_footer\">\n        <form onSubmit={e => {send_message(e)}}> \n          <div className=\"input-group  p-2\">\n          \n            <input type=\"text\" className=\"form-control custom_message_input\" disabled={props.chats[props.Selected_chat].active} placeholder=\"Please Provide Your Message\" \n            value={new_message}\n            onChange={e => setnew_message(e.target.value)}\n            />\n            <button className=\"btn btn-outline-primary\" type=\"submit\"  >\n              <i className=\"far fa-paper-plane\"></i>\n            </button>\n            \n          </div>\n          </form>\n        </div>\n      </div>\n    </div>\n    )\n}\n\nexport default Chat\n","import { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal'\nimport $ from 'jquery';\nimport validator from 'validator'\nimport axios from \"axios\";\n\nconst Chatlist = (props) => \n{\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  \n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [Email_error, setEmail_error] = useState('Please Provide a Valid Email Format')\n  const [email, setemail] = useState(\"\");\n  const [order, setorder] = useState(\"\")\n  const [open, setOpen] = useState(true);\n  const logging =  async (e) => { \n    let is_valid = true\n    e.preventDefault();\n    setOpen(!open)\n    await sleep(500)\n    if (!validator.isEmail(email)) {\n        is_valid= false; \n        $( \"#email_feed_back\" ).fadeIn(\"slow\")\n        \n    }else {\n      $( \"#email_feed_back\" ).fadeOut()\n    }\n    if(!validator.isAlphanumeric(order)){\n        is_valid= false; \n        $( \"#order_feed_back\" ).fadeIn(\"slow\")\n       \n    }else {\n      $( \"#order_feed_back\" ).fadeOut()\n    }\n    if(is_valid) {\n      setemail('');\n      setorder('');\n      /* api call  */\n      let data = {'usermail':email,'order_id':order}  \n      \n\n      axios.post('http://127.0.0.1:8000/chat', data).then((response) => {\n        console.log(response.data)\n        const newchatlist = {active:false,email:email,orderid:order,Messages:[], ws : new WebSocket('ws://127.0.0.1:5000/'+props.chats.length)}\n        props.setchats([...props.chats,newchatlist])\n        handleClose()\n      \n      }).catch((e)=>{\n        setEmail_error('This Email is Not Valid')\n        console.log('This Email is Not Valid',e)\n      });\n      setOpen(open)\n    \n    }else {\n      setOpen(open)\n    }\n    \n}\nconst delete_chat = (index) => { \n  let old_chat = props.chats\n  const new_list = [...old_chat.slice(0, index), ...old_chat.slice(index + 1)]\n  props.setchats(new_list)\n  \n\n}\n    return (\n      <>\n        <div id=\"chat_list\" className=\"col-3 overflow-auto\">\n        <div className=\"p-3 \">\n       \n        <h5 className=\"text-center new_chat\" onClick={handleShow}> \n        Create New Chat <i className=\"fas fa-comment-medical\"></i>\n        </h5>\n        {\n        props.chats.map((c,index) => \n          <div key={index} className=\"card  mt-3 mb-3 p-2 fading\" >\n          <div className=\"card-body\">\n            <div className=\"d-flex justify-content-between \">\n              <h5 onClick={() => {props.setSelected_chat(index)}}  className=\"card-title text-capitalize\"> Email :  {c.email}</h5>\n              <p className=\"align-self-center close\" onClick={()=>{delete_chat(index)}} ><i className=\"fas fa-trash-alt\"></i></p>\n            </div>\n            <p className=\"card-text text-start text-truncate\">Order ID : {c.orderid}</p>\n          </div>\n          </div>\n        )\n        }\n        </div>\n     \n        \n        </div>\n        <Modal\n      \n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      show={show}\n      onHide={handleClose}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          ADDING NEW CHAT\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        \n      <form className=\"text-center\" onSubmit={e => logging(e)}> \n                    <div className=\" p-2  \">\n                        <input type=\"text\" className=\"form-control form-control-lg \" placeholder=\"Please Provide Your Email\"   \n                        value={email}\n                        onChange={e => setemail(e.target.value)}\n                        />\n                        <small id=\"email_feed_back\" className=\"p-4 invalid\">\n                        {Email_error}\n                        </small>\n                        <input type=\"text\" className=\"form-control form-control-lg mt-4\" placeholder=\"Please Provide Your Order\"   \n                        value={order}\n                        onChange={e => setorder(e.target.value)}\n                        />\n                       \n                        <small id=\"order_feed_back\" className=\"p-4 invalid\">\n                            Please Provide a Valid Order ID \n                        </small>\n                       \n                    </div>\n                    <div className=\"div mt-4 mb-2\">\n            \n                    \n                        <button className=\"btn btn-outline-primary w-25\" type=\"submit\" id=\"login_btn\" >\n                        { open ? <>ADD <i className=\"fas fa-comment-medical\"></i> </> : <> <span >.</span> <span>.</span> <span>.</span> </>  }\n\n                        </button>\n                   \n                   \n                    </div>\n                    </form>\n      </Modal.Body>\n    </Modal>\n        </>\n    )\n}\n\nexport default Chatlist\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport  Chat from './pages/chat/components/chat'\nimport  Chatlist from './pages/chat/components/chat_list'\nimport { useState , useEffect} from 'react';\n\nfunction App() {\n  const [Selected_chat, setSelected_chat] = useState(null)\n  const  [chats, setchats] = useState([])\n   const [MSGcount, setMSGcount] = useState(0)\n  useEffect(() => {\n   \n    chats.forEach((element,index) => {\n      const ws = element.ws\n      ws.onopen = () => {\n        console.log(`ROOM ${index} Connected `);\n      }\n  \n      ws.onmessage = (e) => {\n        let new_chat = chats\n        const message = JSON.parse(e.data);\n        new_chat[Selected_chat].Messages = [...new_chat[Selected_chat].Messages, message]\n        new_chat[Selected_chat].active = false ; \n        setchats(new_chat);\n        setMSGcount(MSGcount+1)\n       \n      }\n  \n      return () => {\n        ws.onclose = () => {\n          console.log(`ROOM ${index} Disconnected `);\n        }\n      }\n      \n    });\n   \n  }, [chats,setchats,Selected_chat,setSelected_chat,MSGcount]);\n\n\n  return (\n  <Router>\n        <Switch>\n          <Route exact path=\"/\">\n          <div id=\"chat\">              \n    <div className=\"container-fluid\" >\n      <div className=\"row\">\n        <div className=\"col-12\">\n        <div id=\"chat_header\"  className=\" d-flex  justify-content-between p-2\" > \n          <span className=\"align-self-center\"> \n          <h4 className=\" text-capitalize\"> \n            <i className=\"fab fa-amazon\"></i> amazon Support\n          </h4>\n          </span>\n          <span className=\"d-flex justify-content-around align-self-cente  w-50\" >\n            {\n              Selected_chat !== null && chats.length > 0 ?\n              <>\n              <h6 className=\"align-self-center fading\">Email : {chats[Selected_chat].email} </h6>\n              <h6 className=\"align-self-center  fading\">Order ID : {chats[Selected_chat].orderid} </h6>\n              <span onClick={()=>{setSelected_chat(null) }}  className=\"align-self-center close\"><h6><i className=\"fas fa-times\"></i></h6></span>\n              </>\n              :\n              null\n            }\n              \n          </span>\n         \n          \n        </div>\n\n        </div>\n      </div>\n        <div className=\"row\">\n        <Chatlist setSelected_chat={setSelected_chat} chats={chats} setchats={setchats}  />\n        {Selected_chat != null && chats.length > 0  ? \n        <Chat chats={chats}  setchats={setchats}  Selected_chat={Selected_chat}/> \n        : \n        <div  className=\"col-9 fading\">\n        <div className=\"d-flex  h-100 justify-content-center align-items-center \">\n        <h1>No Chat is selected</h1>\n        </div>\n        </div>\n        \n        }\n        </div>\n    </div>\n    <div className=\"container-fluid \" >\n        <div className=\"row pt-2 \">\n                <div className=\"col-12 text-white d-flex justify-content-between  \" id='footer'>\n                    <h6 className=\"footer_text\"> This application is created by <a href=\"mailto:webmaster@example.com\">  <span>A</span>utomated <span>S</span>olutions <span>E</span>nterprises </a> </h6> \n                <h6 >&copy;ASE </h6>\n                </div>\n            </div>\n        </div>\n    </div>\n              \n          </Route>\n       \n        </Switch>\n      \n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}